{
  "info": {
    "name": "Roles API - Local & Railway",
    "description": "API de autenticaci√≥n y roles con NestJS",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "local_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "railway_url", 
      "value": "https://angelic-vitality-production.up.railway.app",
      "type": "string"
    },
    {
      "key": "baseUrl",
      "value": "{{railway_url}}",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè† Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/",
          "host": ["{{baseUrl}}"],
          "path": [""]
        }
      }
    },
    {
      "name": "üìñ Swagger Documentation",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api",
          "host": ["{{baseUrl}}"],
          "path": ["api"]
        }
      }
    },
    {
      "name": "üë§ Register User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response has user data\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('email');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"admin123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/register",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "register"]
        }
      }
    },
    {
      "name": "üîê Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 201\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              "",
              "if (pm.response.code === 200 || pm.response.code === 201) {",
              "    var jsonData = pm.response.json();",
              "    if (jsonData.access_token) {",
              "        pm.collectionVariables.set(\"token\", jsonData.access_token);",
              "        pm.test(\"Token saved successfully\", function () {",
              "            pm.expect(jsonData.access_token).to.be.a('string');",
              "        });",
              "    }",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"admin123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["auth", "login"]
        }
      }
    },
    {
      "name": "üë®‚Äçüíº Get My Profile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has user profile\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('email');",
              "    pm.expect(jsonData).to.have.property('role');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/user/me",
          "host": ["{{baseUrl}}"],
          "path": ["user", "me"]
        }
      }
    },
    {
      "name": "‚ö° Admin Only Endpoint",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200 or 403\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 403]);",
              "});",
              "",
              "if (pm.response.code === 200) {",
              "    pm.test(\"Admin access granted\", function () {",
              "        var jsonData = pm.response.json();",
              "        pm.expect(jsonData.message).to.include('ADMIN');",
              "    });",
              "} else if (pm.response.code === 403) {",
              "    pm.test(\"Access denied for non-admin\", function () {",
              "        pm.expect(pm.response.code).to.eql(403);",
              "    });",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/user/admin",
          "host": ["{{baseUrl}}"],
          "path": ["user", "admin"]
        }
      }
    }
  ]
}
